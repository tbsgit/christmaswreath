<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="|Aip(P9u%Kxv/b[~tPrH">speed</variable><variable id="dv!;kW=MSSFr@Pk.I)}B">ring2</variable><variable id="!y?cX|5dfBe-;a}[dDJx">colorList</variable></variables><block type="pxt-on-start" id="2~:}LI29Jzm+gZ_Hv7hp" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="!mCd(w64xoM/tL9B:sXv" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let speed = 0" numlines="1" declaredvars="speed"></mutation><next><block type="typescript_statement" id="R)K_U`U.qU~cV?0dGEu$" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum LEDMode {" line1="    //% block=&quot;Rainbow2 Mode&quot;" line2="    Rainbow = 0," line3="    //% block=&quot;Equalizer Mode&quot;" line4="    Equalizer = 1," line5="    //% block=&quot;Breath Mode&quot;" line6="    Breath = 2," line7="    //% block=&quot;Directional Mode&quot;" line8="    Rise = 3," line9="    //% block=&quot;Free Mode&quot;" line10="    Free = 4" line11="}" numlines="12"></mutation><next><block type="typescript_statement" id="E6/PhJuOlm#Y+^(#n@qe" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum Level {" line1="    //% block=&quot;Level 1&quot;" line2="    Level_1 = 0," line3="    //% block=&quot;Level 2&quot;" line4="    Level_2 = 1," line5="    //% block=&quot;Level 3&quot;" line6="    Level_3 = 2," line7="    //% block=&quot;Level 4&quot;" line8="    Level_4 = 3," line9="    //% block=&quot;Level 5&quot;" line10="    Level_5 = 4," line11="    //% block=&quot;Level 6&quot;" line12="    Level_6 = 5," line13="    //% block=&quot;Level 7&quot;" line14="    Level_7 = 6," line15="    //% block=&quot;Level 6&quot;" line16="    Level_8 = 7," line17="    //% block=&quot;Level 9&quot;" line18="    Level_9 = 8," line19="    //% block=&quot;Level 10&quot;" line20="    Level_10 = 9," line21="    //% block=&quot;Level 11&quot;" line22="    Level_11 = 10," line23="    //% block=&quot;Level 12&quot;" line24="    Level_12 = 11," line25="    //% block=&quot;Level 13&quot;" line26="    Level_13 = 12," line27="    //% block=&quot;Level 14&quot;" line28="    Level_14 = 13," line29="    //% block=&quot;Level 15&quot;" line30="    Level_15 = 14" line31="}" numlines="32"></mutation><next><block type="typescript_statement" id="9K!K`2]s,`jO^,4(]oq8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace ChristmasWreath {" line1="    /**" line2="     * A ChristmasWreath ring" line3="     */" line4="" line5="    class neopixelRGB {" line6="        public r: number;" line7="        public g: number;" line8="        public b: number;" line9="" line10="        constructor(r: number, g: number, b: number) {" line11="            this.r = r;" line12="            this.g = g;" line13="            this.b = b;" line14="        }" line15="    }" line16="" line17="    export class ChristmasWreath {" line18="        mode: LEDMode;" line19="        strip: neopixel.Strip;" line20="        //numOfLEDs: number;" line21="        totalNumLeds: number;" line22="        numOfLEDPerPillar: number;" line23="" line24="        private _colorStep: number;" line25="" line26="        private _lastMicVal: number;" line27="        private _colorOffset: number;" line28="" line29="        rainbowSpeed: number;" line30="        private _isSetupRainbow: boolean;" line31="" line32="" line33="        private _breathT: number;" line34="        private _breathDir: number;" line35="        private _breathColorOffset: number;" line36="" line37="        private _riseDuration: number;" line38="        private _riseState: number[];" line39="        private _riseColor: number[];" line40="" line41="        private _colorList: number[];" line42="" line43="" line44="        public updateVars(): void {" line45="            this._colorStep = 360 / this.numOfLEDPerPillar;" line46="            this._colorOffset = 0;" line47="            this._lastMicVal = -1;" line48="            this._breathT = 0;" line49="            this._breathDir = 1;" line50="            this._breathColorOffset = 0;" line51="" line52="            this._riseState = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" line53="            this._riseColor = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" line54="            this._riseDuration = 3;" line55="" line56="        }" line57="" line58="" line59=" " line60="" line61="" line62="        /**" line63="         * Clear strip led color" line64="         */" line65="        //% blockId=&quot;christmasring_clearStrip&quot; block=&quot;%ring clear led color&quot;" line66="        //% ring.defl=ring" line67="        //% weight=90 blockGap=8" line68="        //% parts=&quot;christmasring&quot;" line69="        public clearStrip(): void {" line70="            this.strip.clear();" line71="        }" line72="" line73="        /**" line74="         * Show strip led color" line75="         */" line76="        //% blockId=&quot;christmasring_showStrip&quot; block=&quot;%ring show led color&quot;" line77="        //% ring.defl=ring" line78="        //% weight=90 blockGap=8" line79="        //% parts=&quot;christmasring&quot;" line80="        public showStrip(): void {" line81="            this.strip.show();" line82="        }" line83="" line84="        /**" line85="         * Shows a rainbow pattern on all LEDs." line86="         * @param startHue the start hue value for the rainbow, eg: 1" line87="         * @param endHue the end hue value for the rainbow, eg: 360" line88="         */" line89="        //% blockId=&quot;christmasring_changeMode&quot; block=&quot;%ring|change mode to %mode&quot;" line90="        //% ring.defl=ring" line91="        //% weight=85 blockGap=8" line92="        //% parts=&quot;christmasring&quot;" line93="        public changeMode(m: LEDMode): void {" line94="            this._isSetupRainbow = false;" line95="            this.mode = m;" line96="        }" line97="" line98="        /**" line99="         * Shows a rainbow pattern on all LEDs." line100="         * @param startHue the start hue value for the rainbow, eg: 1" line101="         * @param endHue the end hue value for the rainbow, eg: 360" line102="         */" line103="        //% blockId=&quot;christmasring_rotatePixelColor&quot; block=&quot;%ring|move pixel by %mode|pixel&quot;" line104="        //% ring.defl=ring" line105="        //% weight=85 blockGap=8" line106="        //% parts=&quot;christmasring&quot;" line107="        public rotatePixelColor(speed: number): void {" line108="            this.rainbowSpeed = speed;" line109="            if (this.rainbowSpeed &gt; 5) {" line110="                this.rainbowSpeed = 5;" line111="            }" line112="            if (this.rainbowSpeed &lt; -5) {" line113="                this.rainbowSpeed = -5;" line114="            }" line115="            this.strip.rotate(this.rainbowSpeed);" line116="        }" line117="" line118="        /**" line119="         * Play next animation" line120="         */" line121="        //% blockId=&quot;christmasring_nextMode&quot; block=&quot;%ring play next mode&quot;" line122="        //% ring.defl=ring" line123="        //% weight=90 blockGap=8" line124="        //% parts=&quot;christmasring&quot;" line125="        public nextMode(): void {" line126="            this._isSetupRainbow = false;" line127="            this.mode += 1;" line128="            if (this.mode &gt;= 4) {" line129="                this.mode = 0;" line130="            }" line131="        }" line132="" line133="        /**" line134="         * Play previous animation" line135="         */" line136="        //% blockId=&quot;christmasring_previousMode&quot; block=&quot;%ring play previous mode&quot;" line137="        //% ring.defl=ring" line138="        //% weight=90 blockGap=8" line139="        //% parts=&quot;christmasring&quot;" line140="        public previousMode(): void {" line141="            this._isSetupRainbow = false;" line142="            this.mode -= 1;" line143="            if (this.mode &lt;= 0) {" line144="                this.mode = 3;" line145="            }" line146="        }" line147="" line148="        /**" line149="         * Update animation" line150="         */" line151="        //% blockId=&quot;christmasring_update&quot; block=&quot;%ring update lighting animation&quot;" line152="        //% ring.defl=ring" line153="        //% weight=90 blockGap=8" line154="        //% parts=&quot;christmasring&quot;" line155="        public update(): void {" line156="            if (this.mode == 0) {" line157="                this.rainbowAnimation(this.rainbowSpeed);" line158="                this.showStrip();" line159="                basic.pause(100);" line160="            } else if (this.mode == 1) {" line161="                let mic = 128" line162="                try {" line163="                    mic = input.soundLevel()" line164="                } catch (err) {" line165="                    mic = 128" line166="                }" line167="                this.equalizerAnimation(mic);" line168="                this.showStrip();" line169="                basic.pause(1);" line170="            } else if (this.mode == 2) {" line171="                this.breathAnimation();" line172="                this.showStrip();" line173="            } else if (this.mode == 3) {" line174="                let mic2 = 128" line175="                try {" line176="                    mic2 = input.soundLevel()" line177="                } catch (err2) {" line178="                    mic2 = 128" line179="                }" line180="                this.riseAnimation(mic2, 100)" line181="                this.showStrip();" line182="            } else {" line183="                this.showStrip();" line184="            }" line185="            this._colorOffset += 1;" line186="            this._breathColorOffset += 1;" line187="            this._breathT += 1;" line188="" line189="            if (this._colorOffset &gt; 360) {" line190="                this._colorOffset = 0;" line191="            }" line192="            if (this._breathT &gt; 100) {" line193="                this._breathT = 1;" line194="            }" line195="        }" line196="" line197="        /**" line198="         * Set color pattern list" line199="        * (0, 1, 2, 3, etc...)" line200="        */" line201="        //% blockId=&quot;christmasring_setColorPattern&quot; block=&quot;%ring set color pattern to %colorList to &quot;" line202="        //% ring.defl=ring" line203="        //% weight=90 blockGap=8" line204="        //% parts=&quot;christmasring&quot;" line205="        public setColorPattern(colorList: number[]): number[] {" line206="            this._colorList = colorList;" line207="            return colorList;" line208="        }" line209="" line210="        /**" line211="         * Set leds strip to rainbow pattern." line212="         */" line213="        //% blockId=&quot;christmasring_showRainbow&quot; block=&quot;%ring|set to rainbow pattern&quot;" line214="        //% ring.defl=ring" line215="        //% weight=85 blockGap=8" line216="        //% parts=&quot;christmasring&quot;" line217="        public showRainbow(): void {" line218="            this.strip.showRainbow();" line219="        }" line220="" line221="        " line222="" line223="        private lerp(x: number, y: number, a: number) {" line224="            return (1 - a) * x + a * y;" line225="        }" line226="" line227="        /**" line228="         * Play rainbow animation" line229="         */" line230="        //% blockId=&quot;christmasring_rainbowAnimation&quot; block=&quot;%ring play rainbow animation width speed%speed&quot;" line231="        //% ring.defl=ring" line232="        //% weight=90 blockGap=8" line233="        //% parts=&quot;christmasring&quot;" line234="        public rainbowAnimation(speed: number): void {" line235="            this.rainbowSpeed = speed;" line236="            if (this._isSetupRainbow == false || this._isSetupRainbow == null) {" line237="                this._isSetupRainbow = true;" line238="                this.strip.clear()" line239="                //this.strip.showRainbow(1, 360)" line240="                " line241="                " line242="                let colorArray = [new neopixelRGB(249, 203, 154)," line243="                                  new neopixelRGB(140, 200, 186)," line244="                                  new neopixelRGB(244, 209, 79)," line245="                                  new neopixelRGB(253, 109, 72)];" line246="" line247="                let arrayIndex = 0;" line248="                for (let index = 0; index &lt; colorArray.length - 1; index++) {" line249="                    let r = colorArray[index].r;" line250="                    let g = colorArray[index].g;" line251="                    let b = colorArray[index].b;" line252="" line253="                    let rD = colorArray[index + 1].r;" line254="                    let gD = colorArray[index + 1].g;" line255="                    let bD = colorArray[index + 1].b;" line256="" line257="" line258="                    let num_step = Math.floor(this.totalNumLeds / (colorArray.length - 1));" line259="                    " line260="                    let small_step = 1 / num_step;" line261="                    for (let jj = 1; jj &lt;= num_step; jj++) {" line262="                        arrayIndex++;" line263="                        let amount = small_step * jj;" line264="                        let r_0 = this.lerp(r, rD, amount);" line265="                        let g_0 = this.lerp(g, gD, amount);" line266="                        let b_0 = this.lerp(b, bD, amount);" line267="                        //let tmpHtml = '(' + r_0 + ', ' + g_0 + ', ' + b_0 + ')';" line268="                        this.strip.setPixelColor(arrayIndex, neopixel.rgb(r_0, g_0, b_0 ));" line269="                    }" line270="                }" line271="            }" line272="            this.rotatePixelColor(this.rainbowSpeed)" line273="        }" line274="" line275="        " line276="" line277="" line278="        /**" line279="         * Play equalizer animation" line280="         */" line281="        //% blockId=&quot;christmasring_equalizerAnimation&quot; block=&quot;%ring play equalizer animation with sound level%value&quot;" line282="        //% ring.defl=ring" line283="        //% weight=90 blockGap=8" line284="        //% parts=&quot;christmasring&quot;" line285="        public equalizerAnimation(micVal: number): void {" line286="            if (this._lastMicVal != -1) {" line287="                if (micVal &lt; this._lastMicVal) {" line288="                    micVal = micVal + ((this._lastMicVal - micVal) * 0.2)" line289="                } else {" line290="                    micVal = this._lastMicVal + ((micVal - this._lastMicVal) * 0.95)" line291="                }" line292="            }" line293="            this._lastMicVal = micVal;" line294="            let anchor: number = micVal / 100 * this.numOfLEDPerPillar" line295="" line296="            this.strip.clear()" line297="            for (let idx = 0; idx &lt;= this.numOfLEDPerPillar; idx++) {" line298="                let _color = idx * this._colorStep + this._colorOffset % 360" line299="                if (idx &lt;= anchor) {" line300="                    this.setLevelColor(idx, this.makeColor(_color, 100, 50))" line301="                } else {" line302="                    let _saturation: number = (45 - 5) * ((this.numOfLEDPerPillar - idx) / (this.numOfLEDPerPillar - anchor)) * 0.6" line303="                    let _brightness: number = (100 - 40) * ((this.numOfLEDPerPillar - idx) / (this.numOfLEDPerPillar - anchor)) * 1" line304="                    if (_saturation &lt; 5) {" line305="                        _saturation = 5" line306="                    }" line307="                    this.setLevelColor(idx, this.makeColor(_color, _saturation, _brightness))" line308="                }" line309="            }" line310="        }" line311="" line312="        /**" line313="         * Play breath animation" line314="         */" line315="        //% blockId=&quot;christmasring_breathAnimation&quot; block=&quot;%ring play breath animation&quot;" line316="        //% ring.defl=ring" line317="        //% weight=90 blockGap=8" line318="        //% parts=&quot;christmasring&quot;" line319="        public breathAnimation() {" line320="            if (this._breathT % 100 == 0) {" line321="                this._breathDir *= -1;" line322="            }" line323="            let breathB = 0;" line324="            if (this._breathDir == 1) {" line325="                breathB = this.easeInOutQuad(this._breathT % 100, 0, 100, 100)" line326="            } else {" line327="                breathB = 100 - this.easeInOutQuad(this._breathT % 100, 0, 100, 100)" line328="            }" line329="" line330="            this.strip.clear()" line331="            for (let index2 = 0; index2 &lt; this.numOfLEDPerPillar; index2++) {" line332="                let color = this.makeColor((this._breathColorOffset / 7 + (60 / this.numOfLEDPerPillar * index2)) % 360, 100, breathB * 0.45 + 5)" line333="                this.setLevelColor(index2, color)" line334="            }" line335="" line336="        }" line337="" line338="        /**" line339="         * Play rise animation" line340="         */" line341="        //% blockId=&quot;christmasring_riseAnimation&quot; block=&quot;%ring play rise animation with sound level%micVale and trigger threshold%threshold&quot;" line342="        //% ring.defl=ring" line343="        //% weight=90 blockGap=8" line344="        //% parts=&quot;christmasring&quot;" line345="        public riseAnimation(micVal: Number, threshold: Number): void {" line346="            let _duration = 3" line347="            if (micVal &gt; threshold) {" line348="                this.triggerRise(_duration)" line349="            }" line350="            this.moveRise()" line351="        }" line352="" line353="" line354="" line355="        /**" line356="         * Trigger rise led effect" line357="         */" line358="        //% blockId=&quot;christmasring_triggerRiseWithColor&quot; block=&quot;%ring trigger rise led effect with %duration|duration and %color|color&quot;" line359="        //% ring.defl=ring" line360="        //% weight=90 blockGap=8" line361="        //% parts=&quot;christmasring&quot;" line362="        public triggerRiseWithColor(duration: number, color: number): void {" line363="            this._riseDuration = duration" line364="            let _duration2 = this._riseDuration" line365="            this._riseState[0] = this._riseState[1] = _duration2" line366="            this._riseColor[0] = this._riseColor[1] = this.makeColor(color, 100, 50)" line367="        }" line368="" line369="" line370="        /**" line371="         * Trigger rise led effect" line372="         */" line373="        //% blockId=&quot;christmasring_triggerRise&quot; block=&quot;%ring trigger rise led effect with %duration|duration&quot;" line374="        //% ring.defl=ring" line375="        //% weight=90 blockGap=8" line376="        //% parts=&quot;christmasring&quot;" line377="        public triggerRise(duration: number): void {" line378="            this._riseDuration = duration" line379="            let _duration3 = this._riseDuration" line380="            this._riseState[0] = this._riseState[1] = _duration3" line381="            this._riseColor[0] = this._riseColor[1] = this.makeColor(Math.random() * 360, 100, 50)" line382="        }" line383="" line384="        /**" line385="         * Move rise led move upward" line386="         */" line387="        //% blockId=&quot;christmasring_moveRise&quot; block=&quot;%ring move rise led upward&quot;" line388="        //% ring.defl=ring" line389="        //% weight=90 blockGap=8" line390="        //% parts=&quot;christmasring&quot;" line391="        public moveRise(): void {" line392="            let _duration4 = this._riseDuration" line393="            this.strip.clear()" line394="" line395="            for (let level = 0; level &lt; this.numOfLEDPerPillar; level++) {" line396="                if (this._riseState[level] &gt; 0) {" line397="                    this.setLevelColor(level, this._riseColor[level])" line398="                    this._riseState[level] -= 1;" line399="                    if (this._riseState[level] == 0 &amp;&amp; level + 1 &lt; this.numOfLEDPerPillar) {" line400="                        this._riseState[level + 1] = _duration4 + 1;" line401="                        this._riseColor[level + 1] = this._riseColor[level]" line402="                    }" line403="                } else {" line404="                    this.setLevelColor(level, this.makeColor(30, 25, 10))" line405="                }" line406="            }" line407="        }" line408="" line409="        private makeColor(color: number, saturation: number, brightness: number): number {" line410="            return neopixel.hsl(color, saturation, brightness)" line411="        }" line412="" line413="        /**" line414="         * Set christmas ring color" line415="         */" line416="        //% blockId=&quot;christmasring_setRingColor&quot; block=&quot;%ring set christmas ring led color to %color=neopixel_colors&quot;" line417="        //% ring.defl=ring" line418="        //% weight=90 blockGap=8" line419="        //% parts=&quot;christmasring&quot;" line420="        public setRingColor(color: number): void {" line421="            for (let idx2 = 0; idx2 &lt;= 19; idx2++) {" line422="                this.setLevelColor(idx2, color)" line423="            }" line424="        }" line425="" line426="        /**" line427="         * Set christmas ring brightness" line428="         * value larger than 50 color will change to white" line429="         */" line430="        //% blockId=&quot;christmasring_setRingColorAndBrightness&quot; block=&quot;%ring set christmas ring color to %color=christmasring_pickColorHue and led brightness to %brightness&quot;" line431="        //% ring.defl=ring" line432="        //% weight=90 blockGap=8" line433="        //% parts=&quot;christmasring&quot;" line434="        public setRingColorAndBrightness(color: number, brightness: number): void {" line435="            for (let idx3 = 0; idx3 &lt;= 19; idx3++) {" line436="                this.setLevelColor(idx3, neopixel.hsl(color, 100, brightness))" line437="            }" line438="        }" line439="" line440="" line441="" line442="        /**" line443="         * Set christmas ring brightness" line444="         * Set specfic level to different color and brightness" line445="         * (0 = level-1, 1 = level-2, etc...)" line446="         */" line447="        //% blockId=&quot;christmasring_setLevelColorAndBrightness&quot; block=&quot;%ring set level-%level=christmasring_levels color to %color=christmasring_pickColorHue and led brightness to %brightness&quot;" line448="        //% ring.defl=ring" line449="        //% weight=90 blockGap=8" line450="        //% parts=&quot;christmasring&quot;" line451="        public setLevelColorAndBrightness(level: number, color: number, brightness: number): void {" line452="            this.setLevelColor(level, neopixel.hsl(color, 100, brightness))" line453="        }" line454="" line455="        /**" line456="         * Set specfic level to different color " line457="         * (0 = level-1, 1 = level-2, etc...)" line458="         */" line459="        //% blockId=&quot;christmasring_setLevelColor&quot; block=&quot;%ring set level-%level=christmasring_levels led to %color=neopixel_colors&quot;" line460="        //% ring.defl=ring" line461="        //% weight=90 blockGap=8" line462="        //% parts=&quot;christmasring&quot;" line463="        public setLevelColor(level: number, color: number): void {" line464="            this.strip.setPixelColor(level, color)" line465="            //this.strip.setPixelColor(39 - level, color)" line466="            //this.strip.setPixelColor(level + 41, color)" line467="            //this.strip.setPixelColor(81 - level, color)" line468="" line469="            //if(level==this.numOfLEDPerPillar-1){" line470="            //    this.strip.setPixelColor(19, color)" line471="            //    this.strip.setPixelColor(20, color)" line472="            //    this.strip.setPixelColor(60, color)" line473="            //    this.strip.setPixelColor(61, color)" line474="            //    this.strip.setPixelColor(62, color)" line475="            //}" line476="        }" line477="" line478="        /**" line479="         * Set pixel color " line480="         * (0 = index-1, 1 = index-2, etc...)" line481="         */" line482="        //% blockId=&quot;christmasring_setPixelColor&quot; block=&quot;%ring set pixel-%index led to %color=neopixel_colors&quot;" line483="        //% ring.defl=ring" line484="        //% weight=90 blockGap=8" line485="        //% parts=&quot;christmasring&quot;" line486="        public setPixelColor(index: number, color: number): void {" line487="            this.strip.setPixelColor(index, color)" line488="        }" line489="" line490="        public easeInOutQuad(_percent: number, _elapsed: number, _start: number, _end: number) {" line491="            _percent /= _end / 2;" line492="" line493="            if (_percent &lt; 1) {" line494="                return _start / 2 * _percent * _percent + _elapsed" line495="            }" line496="            _percent += -1" line497="            return (0 - _start) / 2 * (_percent * (_percent - 2) - 1) + _elapsed" line498="        }" line499="    }" line500="    /**" line501="      * Create a new Christmas Ring controller." line502="      * @param mode the default mode where the Christmas ring default setting." line503="      */" line504="    //% blockId=&quot;christmasring_create&quot; block=&quot;Create christmas ring&quot;" line505="    //% weight=90 blockGap=8" line506="    //% parts=&quot;christmasring&quot;" line507="    //% trackArgs=0,1" line508="    //% blockSetVariable=ring" line509="    export function create(): ChristmasWreath {" line510="        let ring = new ChristmasWreath();" line511="        ring.mode = LEDMode.Rainbow;" line512="        ring.numOfLEDPerPillar = 15;" line513="        ring.totalNumLeds = 30;" line514="        ring.strip = neopixel.create(DigitalPin.P2, ring.totalNumLeds, NeoPixelMode.RGB);" line515="        ring.rainbowSpeed = 1;" line516="" line517="        ring.updateVars();" line518="        return ring;" line519="    }" line520="" line521="    /**" line522="     * Gets the level value of a known levels" line523="    */" line524="    //% weight=2 blockGap=8" line525="    //% blockId=&quot;christmasring_levels&quot; block=&quot;%level&quot;" line526="    //% advanced=true" line527="    export function levels(_level: Level): number {" line528="        return _level;" line529="    }" line530="" line531="" line532="    " line533="" line534="    /**" line535="     * Gets hue color" line536="    */" line537="    //% weight=2 blockGap=8" line538="    //% blockId=&quot;christmasring_pickColors&quot; block=&quot;HueColor $color&quot;" line539="    //% color.shadow=&quot;colorWheelHsvPicker&quot;" line540="    export function hueColor(color: number): number {" line541="        return neopixel.hsl(color / 255 * 360, 100, 50);" line542="    }" line543="" line544="    /**" line545="     * Gets color hue" line546="    */" line547="    //% weight=2 blockGap=8" line548="    //% blockId=&quot;christmasring_pickColorHue&quot; block=&quot;Hue $color&quot;" line549="    //% color.shadow=&quot;colorWheelHsvPicker&quot;" line550="    export function hue(color: number): number {" line551="        return (color % 255) / 255 * 360;" line552="    }" line553="" line554="    //% block=&quot;show wheel $color&quot;" line555="    //% color.shadow=&quot;colorWheelPicker&quot;" line556="    export function showColorWheel(color: number): number {" line557="        return (color % 255) / 255 * 360;" line558="    }" line559="" line560="    //% block=&quot;show wheel hsv $color&quot;" line561="    //% color.shadow=&quot;colorWheelHsvPicker&quot;" line562="    export function showColorWheelHsv(color: number): number {" line563="        return (color % 255) / 255 * 360;" line564="    }" line565="}" numlines="566"></mutation><next><block type="device_show_leds" id="AMJGuYAREEgUQ|H316{`"><field name="LEDS">`
        # . # . . 
        # . # . . 
        # # . . . 
        # . . . . 
        . . . . .
        `</field><next><block type="variables_set" id="#yI)m1{g}Z0hFIVm2(YB"><field name="VAR" id="!y?cX|5dfBe-;a}[dDJx">colorList</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="yf:RruyhYKngeWqE`jyE"><mutation items="3" horizontalafter="3"/><value name="ADD0"><block type="christmasring_pickColorHue" id="~FkfT1dY1-r`PH|cGom/"><value name="color"><shadow type="colorWheelHsvPicker" id="{LAcxv=8Z-1Q3pTZoRtX"><field name="value">147</field></shadow></value></block></value><value name="ADD1"><block type="christmasring_pickColorHue" id="tw5-yX3YGG1w*|S1kF,l"><value name="color"><shadow type="colorWheelHsvPicker" id="Y,;jHV-F`_`[se!EtSV2"><field name="value">193</field></shadow></value></block></value><value name="ADD2"><block type="christmasring_pickColorHue" id="vTSSZy2]];~{OW$MqCeN"><value name="color"><shadow type="colorWheelHsvPicker" id="3p{1zUGQ^t*7BB}?!qN("><field name="value">170</field></shadow></value></block></value></block></value><next><block type="variables_set" id="/_^?}{A}t94Hq+ptLWIb"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="christmasring_create" id="AWA=WP,b)B/#=.pZgSj+"/></value><next><block type="christmasring_changeMode" id="g1B!SA/Zz,#uP*$/mx~O"><field name="mode">LEDMode.Rainbow</field><value name="ring"><block type="variables_get" id="akGd-sDU{Z{yk(F(LtVg"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value><next><block type="christmasring_showStrip" id="?(vZ7-Gg=fDPBtE,PP80"><value name="ring"><block type="variables_get" id="gIdd*}hbY`=b%Ik2.$g|"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value><next><block type="variables_set" id="G.3gUmg/R94h[XWF1]n+"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field><value name="VALUE"><shadow type="math_number" id="Y6((jK99+8Tq7Gd==Sj0"><field name="NUM">1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="device_button_event" id="WO%,T)YhGUj(L[e`AOOz" x="1829" y="20"><field name="NAME">Button.A</field><statement name="HANDLER"><block type="variables_set" id="#T;R$#xt_j^VSd5X3y]8"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="Qh/PslN:,@BXaI]2jrMt"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="q*gx$uL5eavxy#{_};PG"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field></block></value><value name="B"><shadow type="math_number" id="$LZ3GmtekZhfJXc*ta)n"><field name="NUM">1</field></shadow></value></block></value><next><block type="christmasring_setRingColor" id="EEZ0klPa--+7+p.ku~xO"><value name="ring"><block type="variables_get" id="i{l4B[w^[.GZF,/g5Jom"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value><value name="color"><shadow type="neopixel_colors"/><block type="ChristmasWreath_showColorWheel" id="W^j`(R#pgHr==RN;pwlm"><value name="color"><shadow type="colorWheelPicker" id="+)hDPzlQ#7K@=VmDc,^3"><field name="value">255</field></shadow></value></block></value><next><block type="christmasring_showStrip" id="wsqjx9QDw$Dk)L(CE,#["><comment pinned="false" h="80" w="160" relx="10" rely="10">ring2.showColor(neopixel.hsl(0, 0, 0))</comment><value name="ring"><block type="variables_get" id="Py7~N6?Wb82zj:jfV?Up"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value></block></next></block></next></block></statement></block><block type="device_button_event" id="jkE2#=d0vA{mGY]uCIT{" x="2535" y="20"><field name="NAME">Button.B</field><statement name="HANDLER"><block type="variables_set" id="@t2yzp=0R_z5yqYvEVcJ"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="Q!-M.|g%23%k:?SE-B{h"><field name="OP">MINUS</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="h_b{LMLbg.-e3v[M@#8]"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field></block></value><value name="B"><shadow type="math_number" id="ue;97Q*AOkM$X43cqib-"><field name="NUM">1</field></shadow></value></block></value><next><block type="christmasring_setRingColor" id="C`=+y.`IyI`04EVJ4:64"><value name="ring"><block type="variables_get" id="lw:x-)Dzgbq76g*@dMW@"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value><value name="color"><shadow type="neopixel_colors"/><block type="ChristmasWreath_showColorWheel" id="+JUA(*WzHQ]jJ/B054tj"><value name="color"><shadow type="colorWheelPicker" id="QJN/J4]Tol.:$8,q,s9~"><field name="value">45</field></shadow></value></block></value><next><block type="christmasring_showStrip" id="UU[-=/.2Kbc6!Q@%GO#e"><comment pinned="false" h="80" w="160" relx="10" rely="10">ring2.showColor(neopixel.hsl(0, 0, 0))</comment><value name="ring"><block type="variables_get" id="toVPP;F}iil^VJeB+lp~"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value></block></next></block></next></block></statement></block><block type="device_forever" id="SM.IlEmllZ$oU,q|`uW?" x="3233" y="20"><statement name="HANDLER"><block type="christmasring_rainbowAnimation" id="0_+a9C$1Yhg`qnaStLC~"><value name="ring"><block type="variables_get" id="$PQAE/Smy)7d_/X%Ggz-"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value><value name="speed"><block type="variables_get" id="7y1KsB$LA#{~x1a+5:`c"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field></block></value><next><block type="christmasring_showStrip" id="9;rX8pW:J`#r(yehy;a6"><comment pinned="false" h="80" w="160" relx="10" rely="10">ring2.setRingColor(ChristmasWreath.showColorWheel(45))
ring2.showColor(neopixel.hsl(0, 0, 0))</comment><value name="ring"><block type="variables_get" id="Wo7OII9}~*F^%GJ6YX2w"><field name="VAR" id="dv!;kW=MSSFr@Pk.I)}B">ring2</field></block></value></block></next></block></statement></block><block type="variables_set" id="r+d(50#Lvl@1Q2$acnjD" disabled="true" x="3893" y="20"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id=".CDy[]F{KG%fuzt2-SIt" disabled="true"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="_$1^BgrwExKGgHNPFnBi" disabled="true"><field name="VAR" id="|Aip(P9u%Kxv/b[~tPrH">speed</field></block></value><value name="B"><shadow type="math_number" id="CD|{K7?eF/h6wGK/nmWz" disabled="true"><field name="NUM">1</field></shadow></value></block></value></block></xml>