<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="N}{7/VJ.Re]30R~JGI1F">speed</variable><variable id="U#DVR-r^h`0Kj`CQ$n}h">ring2</variable><variable id="/AvssPuBBrM3V%re[L3)">colorList</variable></variables><block type="pxt-on-start" id="ise.TP6CUpzv-lT:q:r6" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="qEflFB?-FqL;H!y:[CnO" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let speed = 0" numlines="1" declaredvars="speed"></mutation><next><block type="typescript_statement" id="zv*N,OV8)M$CX_]h`7,L" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum LEDMode {" line1="    //% block=&quot;Rainbow2 Mode&quot;" line2="    Rainbow = 0," line3="    //% block=&quot;Equalizer Mode&quot;" line4="    Equalizer = 1," line5="    //% block=&quot;Breath Mode&quot;" line6="    Breath = 2," line7="    //% block=&quot;Directional Mode&quot;" line8="    Rise = 3," line9="    //% block=&quot;Free Mode&quot;" line10="    Free = 4" line11="}" numlines="12"></mutation><next><block type="typescript_statement" id="m3G@R$V_uj/.Bb,p`1;s" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum Level {" line1="    //% block=&quot;Level 1&quot;" line2="    Level_1 = 0," line3="    //% block=&quot;Level 2&quot;" line4="    Level_2 = 1," line5="    //% block=&quot;Level 3&quot;" line6="    Level_3 = 2," line7="    //% block=&quot;Level 4&quot;" line8="    Level_4 = 3," line9="    //% block=&quot;Level 5&quot;" line10="    Level_5 = 4," line11="    //% block=&quot;Level 6&quot;" line12="    Level_6 = 5," line13="    //% block=&quot;Level 7&quot;" line14="    Level_7 = 6," line15="    //% block=&quot;Level 6&quot;" line16="    Level_8 = 7," line17="    //% block=&quot;Level 9&quot;" line18="    Level_9 = 8," line19="    //% block=&quot;Level 10&quot;" line20="    Level_10 = 9," line21="    //% block=&quot;Level 11&quot;" line22="    Level_11 = 10," line23="    //% block=&quot;Level 12&quot;" line24="    Level_12 = 11," line25="    //% block=&quot;Level 13&quot;" line26="    Level_13 = 12," line27="    //% block=&quot;Level 14&quot;" line28="    Level_14 = 13," line29="    //% block=&quot;Level 15&quot;" line30="    Level_15 = 14" line31="}" numlines="32"></mutation><next><block type="typescript_statement" id=",C*8w{%OGWMkPANU+yQe" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace ChristmasWreath {" line1="    /**" line2="     * A ChristmasWreath ring" line3="     */" line4="" line5="    class neopixelRGB {" line6="        public r: number;" line7="        public g: number;" line8="        public b: number;" line9="" line10="        constructor(r: number, g: number, b: number) {" line11="            this.r = r;" line12="            this.g = g;" line13="            this.b = b;" line14="        }" line15="    }" line16="" line17="    export class ChristmasWreath {" line18="        mode: LEDMode;" line19="        strip: neopixel.Strip;" line20="        //numOfLEDs: number;" line21="        totalNumLeds: number;" line22="        numOfLEDPerPillar: number;" line23="" line24="        private _colorStep: number;" line25="" line26="        private _lastMicVal: number;" line27="        private _colorOffset: number;" line28="" line29="        rainbowSpeed: number;" line30="        private _isSetupRainbow: boolean;" line31="" line32="" line33="        private _breathT: number;" line34="        private _breathDir: number;" line35="        private _breathColorOffset: number;" line36="" line37="        private _riseDuration: number;" line38="        private _riseState: number[];" line39="        private _riseColor: number[];" line40="" line41="        private _colorList: number[];" line42="" line43="" line44="        public updateVars(): void {" line45="            this._colorStep = 360 / this.numOfLEDPerPillar;" line46="            this._colorOffset = 0;" line47="            this._lastMicVal = -1;" line48="            this._breathT = 0;" line49="            this._breathDir = 1;" line50="            this._breathColorOffset = 0;" line51="" line52="            this._riseState = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" line53="            this._riseColor = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" line54="            this._riseDuration = 3;" line55="" line56="        }" line57="" line58="" line59=" " line60="" line61="" line62="        /**" line63="         * Clear strip led color" line64="         */" line65="        //% blockId=&quot;christmasring_clearStrip&quot; block=&quot;%ring clear led color&quot;" line66="        //% ring.defl=ring" line67="        //% weight=90 blockGap=8" line68="        //% parts=&quot;christmasring&quot;" line69="        public clearStrip(): void {" line70="            this.strip.clear();" line71="        }" line72="" line73="        /**" line74="         * Show strip led color" line75="         */" line76="        //% blockId=&quot;christmasring_showStrip&quot; block=&quot;%ring show led color&quot;" line77="        //% ring.defl=ring" line78="        //% weight=90 blockGap=8" line79="        //% parts=&quot;christmasring&quot;" line80="        public showStrip(): void {" line81="            this.strip.show();" line82="        }" line83="" line84="        /**" line85="         * Shows a rainbow pattern on all LEDs." line86="         * @param startHue the start hue value for the rainbow, eg: 1" line87="         * @param endHue the end hue value for the rainbow, eg: 360" line88="         */" line89="        //% blockId=&quot;christmasring_changeMode&quot; block=&quot;%ring|change mode to %mode&quot;" line90="        //% ring.defl=ring" line91="        //% weight=85 blockGap=8" line92="        //% parts=&quot;christmasring&quot;" line93="        public changeMode(m: LEDMode): void {" line94="            this._isSetupRainbow = false;" line95="            this.mode = m;" line96="        }" line97="" line98="        /**" line99="         * Shows a rainbow pattern on all LEDs." line100="         * @param startHue the start hue value for the rainbow, eg: 1" line101="         * @param endHue the end hue value for the rainbow, eg: 360" line102="         */" line103="        //% blockId=&quot;christmasring_rotatePixelColor&quot; block=&quot;%ring|move pixel by %mode|pixel&quot;" line104="        //% ring.defl=ring" line105="        //% weight=85 blockGap=8" line106="        //% parts=&quot;christmasring&quot;" line107="        public rotatePixelColor(speed: number): void {" line108="            this.rainbowSpeed = speed;" line109="            if (this.rainbowSpeed &gt; 5) {" line110="                this.rainbowSpeed = 5;" line111="            }" line112="            if (this.rainbowSpeed &lt; -5) {" line113="                this.rainbowSpeed = -5;" line114="            }" line115="            this.strip.rotate(this.rainbowSpeed);" line116="        }" line117="" line118="        /**" line119="         * Play next animation" line120="         */" line121="        //% blockId=&quot;christmasring_nextMode&quot; block=&quot;%ring play next mode&quot;" line122="        //% ring.defl=ring" line123="        //% weight=90 blockGap=8" line124="        //% parts=&quot;christmasring&quot;" line125="        public nextMode(): void {" line126="            this._isSetupRainbow = false;" line127="            this.mode += 1;" line128="            if (this.mode &gt;= 4) {" line129="                this.mode = 0;" line130="            }" line131="        }" line132="" line133="        /**" line134="         * Play previous animation" line135="         */" line136="        //% blockId=&quot;christmasring_previousMode&quot; block=&quot;%ring play previous mode&quot;" line137="        //% ring.defl=ring" line138="        //% weight=90 blockGap=8" line139="        //% parts=&quot;christmasring&quot;" line140="        public previousMode(): void {" line141="            this._isSetupRainbow = false;" line142="            this.mode -= 1;" line143="            if (this.mode &lt;= 0) {" line144="                this.mode = 3;" line145="            }" line146="        }" line147="" line148="        /**" line149="         * Update animation" line150="         */" line151="        //% blockId=&quot;christmasring_update&quot; block=&quot;%ring update lighting animation&quot;" line152="        //% ring.defl=ring" line153="        //% weight=90 blockGap=8" line154="        //% parts=&quot;christmasring&quot;" line155="        public update(): void {" line156="            if (this.mode == 0) {" line157="                this.rainbowAnimation(this.rainbowSpeed);" line158="                this.showStrip();" line159="                basic.pause(100);" line160="            } else if (this.mode == 1) {" line161="                let mic = 128" line162="                try {" line163="                    mic = input.soundLevel()" line164="                } catch (err) {" line165="                    mic = 128" line166="                }" line167="                this.equalizerAnimation(mic);" line168="                this.showStrip();" line169="                basic.pause(1);" line170="            } else if (this.mode == 2) {" line171="                this.breathAnimation();" line172="                this.showStrip();" line173="            } else if (this.mode == 3) {" line174="                let mic2 = 128" line175="                try {" line176="                    mic2 = input.soundLevel()" line177="                } catch (err2) {" line178="                    mic2 = 128" line179="                }" line180="                this.riseAnimation(mic2, 100)" line181="                this.showStrip();" line182="            } else {" line183="                this.showStrip();" line184="            }" line185="            this._colorOffset += 1;" line186="            this._breathColorOffset += 1;" line187="            this._breathT += 1;" line188="" line189="            if (this._colorOffset &gt; 360) {" line190="                this._colorOffset = 0;" line191="            }" line192="            if (this._breathT &gt; 100) {" line193="                this._breathT = 1;" line194="            }" line195="        }" line196="" line197="        /**" line198="         * Set color pattern list" line199="        * (0, 1, 2, 3, etc...)" line200="        */" line201="        //% blockId=&quot;christmasring_setColorPattern&quot; block=&quot;%ring|set color pattern to %colorList to &quot;" line202="        //% ring.defl=ring" line203="        //% weight=90 blockGap=8" line204="        //% parts=&quot;christmasring&quot;" line205="        public setColorPattern(colorList: number[]): void {" line206="            this._colorList = colorList;            " line207="        }" line208="" line209="        /**" line210="         * Set leds strip to rainbow pattern." line211="         */" line212="        //% blockId=&quot;christmasring_showRainbow&quot; block=&quot;%ring|set to rainbow pattern&quot;" line213="        //% ring.defl=ring" line214="        //% weight=85 blockGap=8" line215="        //% parts=&quot;christmasring&quot;" line216="        public showRainbow(): void {" line217="            this.strip.showRainbow();" line218="        }" line219="" line220="        " line221="" line222="        private lerp(x: number, y: number, a: number) {" line223="            return (1 - a) * x + a * y;" line224="        }" line225="" line226="        /**" line227="         * Play rainbow animation" line228="         */" line229="        //% blockId=&quot;christmasring_rainbowAnimation&quot; block=&quot;%ring play rainbow animation width speed%speed&quot;" line230="        //% ring.defl=ring" line231="        //% weight=90 blockGap=8" line232="        //% parts=&quot;christmasring&quot;" line233="        public rainbowAnimation(speed: number): void {" line234="            this.rainbowSpeed = speed;" line235="            if (this._isSetupRainbow == false || this._isSetupRainbow == null) {" line236="                this._isSetupRainbow = true;" line237="                this.strip.clear()" line238="                //this.strip.showRainbow(1, 360)" line239="                " line240="                " line241="                let colorArray = [new neopixelRGB(255, 169, 0)," line242="                                  new neopixelRGB(249, 209, 0)," line243="                                  new neopixelRGB(116, 213, 245)," line244="                                  new neopixelRGB(255, 38, 141)," line245="                                  new neopixelRGB(145, 52, 137)," line246="                                    new neopixelRGB(255, 169, 0)];" line247="" line248="                let arrayIndex = 0;" line249="                for (let index = 0; index &lt; colorArray.length - 1; index++) {" line250="                    let r = colorArray[index].r;" line251="                    let g = colorArray[index].g;" line252="                    let b = colorArray[index].b;" line253="" line254="                    let rD = colorArray[index + 1].r;" line255="                    let gD = colorArray[index + 1].g;" line256="                    let bD = colorArray[index + 1].b;" line257="" line258="" line259="                    let num_step = Math.floor(this.totalNumLeds / (colorArray.length - 1));" line260="                    " line261="                    let small_step = 1 / num_step;" line262="                    for (let jj = 1; jj &lt;= num_step; jj++) {" line263="                        arrayIndex++;" line264="                        let amount = small_step * jj;" line265="                        let r_0 = this.lerp(r, rD, amount);" line266="                        let g_0 = this.lerp(g, gD, amount);" line267="                        let b_0 = this.lerp(b, bD, amount);" line268="                        //let tmpHtml = '(' + r_0 + ', ' + g_0 + ', ' + b_0 + ')';" line269="                        this.strip.setPixelColor(arrayIndex, neopixel.rgb(r_0, g_0, b_0 ));" line270="                    }" line271="                }" line272="            }" line273="            this.rotatePixelColor(this.rainbowSpeed)" line274="        }" line275="" line276="        " line277="" line278="" line279="        /**" line280="         * Play equalizer animation" line281="         */" line282="        //% blockId=&quot;christmasring_equalizerAnimation&quot; block=&quot;%ring play equalizer animation with sound level%value&quot;" line283="        //% ring.defl=ring" line284="        //% weight=90 blockGap=8" line285="        //% parts=&quot;christmasring&quot;" line286="        public equalizerAnimation(micVal: number): void {" line287="            if (this._lastMicVal != -1) {" line288="                if (micVal &lt; this._lastMicVal) {" line289="                    micVal = micVal + ((this._lastMicVal - micVal) * 0.2)" line290="                } else {" line291="                    micVal = this._lastMicVal + ((micVal - this._lastMicVal) * 0.95)" line292="                }" line293="            }" line294="            this._lastMicVal = micVal;" line295="            let anchor: number = micVal / 100 * this.numOfLEDPerPillar" line296="" line297="            this.strip.clear()" line298="            for (let idx = 0; idx &lt;= this.numOfLEDPerPillar; idx++) {" line299="                let _color = idx * this._colorStep + this._colorOffset % 360" line300="                if (idx &lt;= anchor) {" line301="                    this.setLevelColor(idx, this.makeColor(_color, 100, 50))" line302="                } else {" line303="                    let _saturation: number = (45 - 5) * ((this.numOfLEDPerPillar - idx) / (this.numOfLEDPerPillar - anchor)) * 0.6" line304="                    let _brightness: number = (100 - 40) * ((this.numOfLEDPerPillar - idx) / (this.numOfLEDPerPillar - anchor)) * 1" line305="                    if (_saturation &lt; 5) {" line306="                        _saturation = 5" line307="                    }" line308="                    this.setLevelColor(idx, this.makeColor(_color, _saturation, _brightness))" line309="                }" line310="            }" line311="        }" line312="" line313="        /**" line314="         * Play breath animation" line315="         */" line316="        //% blockId=&quot;christmasring_breathAnimation&quot; block=&quot;%ring play breath animation&quot;" line317="        //% ring.defl=ring" line318="        //% weight=90 blockGap=8" line319="        //% parts=&quot;christmasring&quot;" line320="        public breathAnimation() {" line321="            if (this._breathT % 100 == 0) {" line322="                this._breathDir *= -1;" line323="            }" line324="            let breathB = 0;" line325="            if (this._breathDir == 1) {" line326="                breathB = this.easeInOutQuad(this._breathT % 100, 0, 100, 100)" line327="            } else {" line328="                breathB = 100 - this.easeInOutQuad(this._breathT % 100, 0, 100, 100)" line329="            }" line330="" line331="            this.strip.clear()" line332="            for (let index2 = 0; index2 &lt; this.numOfLEDPerPillar; index2++) {" line333="                let color = this.makeColor((this._breathColorOffset / 7 + (60 / this.numOfLEDPerPillar * index2)) % 360, 100, breathB * 0.45 + 5)" line334="                this.setLevelColor(index2, color)" line335="            }" line336="" line337="        }" line338="" line339="        /**" line340="         * Play rise animation" line341="         */" line342="        //% blockId=&quot;christmasring_riseAnimation&quot; block=&quot;%ring play rise animation with sound level%micVale and trigger threshold%threshold&quot;" line343="        //% ring.defl=ring" line344="        //% weight=90 blockGap=8" line345="        //% parts=&quot;christmasring&quot;" line346="        public riseAnimation(micVal: Number, threshold: Number): void {" line347="            let _duration = 3" line348="            if (micVal &gt; threshold) {" line349="                this.triggerRise(_duration)" line350="            }" line351="            this.moveRise()" line352="        }" line353="" line354="" line355="" line356="        /**" line357="         * Trigger rise led effect" line358="         */" line359="        //% blockId=&quot;christmasring_triggerRiseWithColor&quot; block=&quot;%ring trigger rise led effect with %duration|duration and %color|color&quot;" line360="        //% ring.defl=ring" line361="        //% weight=90 blockGap=8" line362="        //% parts=&quot;christmasring&quot;" line363="        public triggerRiseWithColor(duration: number, color: number): void {" line364="            this._riseDuration = duration" line365="            let _duration2 = this._riseDuration" line366="            this._riseState[0] = this._riseState[1] = _duration2" line367="            this._riseColor[0] = this._riseColor[1] = this.makeColor(color, 100, 50)" line368="        }" line369="" line370="" line371="        /**" line372="         * Trigger rise led effect" line373="         */" line374="        //% blockId=&quot;christmasring_triggerRise&quot; block=&quot;%ring trigger rise led effect with %duration|duration&quot;" line375="        //% ring.defl=ring" line376="        //% weight=90 blockGap=8" line377="        //% parts=&quot;christmasring&quot;" line378="        public triggerRise(duration: number): void {" line379="            this._riseDuration = duration" line380="            let _duration3 = this._riseDuration" line381="            this._riseState[0] = this._riseState[1] = _duration3" line382="            this._riseColor[0] = this._riseColor[1] = this.makeColor(Math.random() * 360, 100, 50)" line383="        }" line384="" line385="        /**" line386="         * Move rise led move upward" line387="         */" line388="        //% blockId=&quot;christmasring_moveRise&quot; block=&quot;%ring move rise led upward&quot;" line389="        //% ring.defl=ring" line390="        //% weight=90 blockGap=8" line391="        //% parts=&quot;christmasring&quot;" line392="        public moveRise(): void {" line393="            let _duration4 = this._riseDuration" line394="            this.strip.clear()" line395="" line396="            for (let level = 0; level &lt; this.numOfLEDPerPillar; level++) {" line397="                if (this._riseState[level] &gt; 0) {" line398="                    this.setLevelColor(level, this._riseColor[level])" line399="                    this._riseState[level] -= 1;" line400="                    if (this._riseState[level] == 0 &amp;&amp; level + 1 &lt; this.numOfLEDPerPillar) {" line401="                        this._riseState[level + 1] = _duration4 + 1;" line402="                        this._riseColor[level + 1] = this._riseColor[level]" line403="                    }" line404="                } else {" line405="                    this.setLevelColor(level, this.makeColor(30, 25, 10))" line406="                }" line407="            }" line408="        }" line409="" line410="        private makeColor(color: number, saturation: number, brightness: number): number {" line411="            return neopixel.hsl(color, saturation, brightness)" line412="        }" line413="" line414="        /**" line415="         * Set christmas ring color" line416="         */" line417="        //% blockId=&quot;christmasring_setRingColor&quot; block=&quot;%ring set christmas ring led color to %color=neopixel_colors&quot;" line418="        //% ring.defl=ring" line419="        //% weight=90 blockGap=8" line420="        //% parts=&quot;christmasring&quot;" line421="        public setRingColor(color: number): void {" line422="            for (let idx2 = 0; idx2 &lt;= 19; idx2++) {" line423="                this.setLevelColor(idx2, color)" line424="            }" line425="        }" line426="" line427="        /**" line428="         * Set christmas ring brightness" line429="         * value larger than 50 color will change to white" line430="         */" line431="        //% blockId=&quot;christmasring_setRingColorAndBrightness&quot; block=&quot;%ring set christmas ring color to %color=christmasring_pickColorHue and led brightness to %brightness&quot;" line432="        //% ring.defl=ring" line433="        //% weight=90 blockGap=8" line434="        //% parts=&quot;christmasring&quot;" line435="        public setRingColorAndBrightness(color: number, brightness: number): void {" line436="            for (let idx3 = 0; idx3 &lt;= 19; idx3++) {" line437="                this.setLevelColor(idx3, neopixel.hsl(color, 100, brightness))" line438="            }" line439="        }" line440="" line441="" line442="" line443="        /**" line444="         * Set christmas ring brightness" line445="         * Set specfic level to different color and brightness" line446="         * (0 = level-1, 1 = level-2, etc...)" line447="         */" line448="        //% blockId=&quot;christmasring_setLevelColorAndBrightness&quot; block=&quot;%ring set level-%level=christmasring_levels color to %color=christmasring_pickColorHue and led brightness to %brightness&quot;" line449="        //% ring.defl=ring" line450="        //% weight=90 blockGap=8" line451="        //% parts=&quot;christmasring&quot;" line452="        public setLevelColorAndBrightness(level: number, color: number, brightness: number): void {" line453="            this.setLevelColor(level, neopixel.hsl(color, 100, brightness))" line454="        }" line455="" line456="        /**" line457="         * Set specfic level to different color " line458="         * (0 = level-1, 1 = level-2, etc...)" line459="         */" line460="        //% blockId=&quot;christmasring_setLevelColor&quot; block=&quot;%ring set level-%level=christmasring_levels led to %color=neopixel_colors&quot;" line461="        //% ring.defl=ring" line462="        //% weight=90 blockGap=8" line463="        //% parts=&quot;christmasring&quot;" line464="        public setLevelColor(level: number, color: number): void {" line465="            this.strip.setPixelColor(level, color)" line466="            //this.strip.setPixelColor(39 - level, color)" line467="            //this.strip.setPixelColor(level + 41, color)" line468="            //this.strip.setPixelColor(81 - level, color)" line469="" line470="            //if(level==this.numOfLEDPerPillar-1){" line471="            //    this.strip.setPixelColor(19, color)" line472="            //    this.strip.setPixelColor(20, color)" line473="            //    this.strip.setPixelColor(60, color)" line474="            //    this.strip.setPixelColor(61, color)" line475="            //    this.strip.setPixelColor(62, color)" line476="            //}" line477="        }" line478="" line479="        /**" line480="         * Set pixel color " line481="         * (0 = index-1, 1 = index-2, etc...)" line482="         */" line483="        //% blockId=&quot;christmasring_setPixelColor&quot; block=&quot;%ring set pixel-%index led to %color=neopixel_colors&quot;" line484="        //% ring.defl=ring" line485="        //% weight=90 blockGap=8" line486="        //% parts=&quot;christmasring&quot;" line487="        public setPixelColor(index: number, color: number): void {" line488="            this.strip.setPixelColor(index, color)" line489="        }" line490="" line491="        public easeInOutQuad(_percent: number, _elapsed: number, _start: number, _end: number) {" line492="            _percent /= _end / 2;" line493="" line494="            if (_percent &lt; 1) {" line495="                return _start / 2 * _percent * _percent + _elapsed" line496="            }" line497="            _percent += -1" line498="            return (0 - _start) / 2 * (_percent * (_percent - 2) - 1) + _elapsed" line499="        }" line500="    }" line501="    /**" line502="      * Create a new Christmas Ring controller." line503="      * @param mode the default mode where the Christmas ring default setting." line504="      */" line505="    //% blockId=&quot;christmasring_create&quot; block=&quot;Create christmas ring&quot;" line506="    //% weight=90 blockGap=8" line507="    //% parts=&quot;christmasring&quot;" line508="    //% trackArgs=0,1" line509="    //% blockSetVariable=ring" line510="    export function create(): ChristmasWreath {" line511="        let ring = new ChristmasWreath();" line512="        ring.mode = LEDMode.Rainbow;" line513="        ring.numOfLEDPerPillar = 15;" line514="        ring.totalNumLeds = 30;" line515="        ring.strip = neopixel.create(DigitalPin.P2, ring.totalNumLeds, NeoPixelMode.RGB);" line516="        ring.rainbowSpeed = 1;" line517="" line518="        ring.updateVars();" line519="        return ring;" line520="    }" line521="" line522="    /**" line523="     * Gets the level value of a known levels" line524="    */" line525="    //% weight=2 blockGap=8" line526="    //% blockId=&quot;christmasring_levels&quot; block=&quot;%level&quot;" line527="    //% advanced=true" line528="    export function levels(_level: Level): number {" line529="        return _level;" line530="    }" line531="" line532="" line533="    " line534="" line535="    /**" line536="     * Gets hue color" line537="    */" line538="    //% weight=2 blockGap=8" line539="    //% blockId=&quot;christmasring_pickColors&quot; block=&quot;HueColor $color&quot;" line540="    //% color.shadow=&quot;colorWheelHsvPicker&quot;" line541="    export function hueColor(color: number): number {" line542="        return neopixel.hsl(color / 255 * 360, 100, 50);" line543="    }" line544="" line545="    /**" line546="     * Gets color hue" line547="    */" line548="    //% weight=2 blockGap=8" line549="    //% blockId=&quot;christmasring_pickColorHue&quot; block=&quot;Hue $color&quot;" line550="    //% color.shadow=&quot;colorWheelHsvPicker&quot;" line551="    export function hue(color: number): number {" line552="        return (color % 255) / 255 * 360;" line553="    }" line554="" line555="    //% block=&quot;show wheel $color&quot;" line556="    //% color.shadow=&quot;colorWheelPicker&quot;" line557="    export function showColorWheel(color: number): number {" line558="        return (color % 255) / 255 * 360;" line559="    }" line560="" line561="    //% block=&quot;show wheel hsv $color&quot;" line562="    //% color.shadow=&quot;colorWheelHsvPicker&quot;" line563="    export function showColorWheelHsv(color: number): number {" line564="        return (color % 255) / 255 * 360;" line565="    }" line566="}" numlines="567"></mutation><next><block type="device_show_leds" id="GaG!zs+}h}}/$+4WlW?+"><field name="LEDS">`
        # . # . . 
        # . # . . 
        # # . . . 
        # . # . . 
        . . . . .
        `</field><next><block type="variables_set" id=":=mF-b4k,4!+A73!ZD6:"><field name="VAR" id="/AvssPuBBrM3V%re[L3)">colorList</field><value name="VALUE"><shadow type="math_number" id="v_lTaZ(ijRM@}::MKQX|"><field name="NUM">0</field></shadow><block type="lists_create_with" id="iz;g)XOTiiZEeJjeZ!qq" inline="false"><mutation items="4" horizontalafter="3"/><value name="ADD0"><block type="christmasring_pickColors" id="5]P%u=4a2lj_8o8:I3?)"><value name="color"><shadow type="colorWheelHsvPicker" id="=o9)v={n.fZVMfO5[lW)"><field name="value">64</field></shadow></value></block></value><value name="ADD1"><block type="ChristmasWreath_showColorWheel" id="4%~ET{?s^{nK21xnqj/W"><value name="color"><shadow type="colorWheelPicker" id="cPxf7MSn]m]=WPJ_aE`W"><field name="value">67</field></shadow></value></block></value><value name="ADD2"><block type="christmasring_pickColors" id="O84+mQ%huJmD[_y%I-1T"><value name="color"><shadow type="colorWheelHsvPicker" id="HkXA/I{qW$A*.JJ-Ewy*"><field name="value">113</field></shadow></value></block></value><value name="ADD3"><block type="christmasring_pickColors" id="^(#}B^c#psTHWw9YWp^P"><value name="color"><shadow type="colorWheelHsvPicker" id="![7:s~WeA)oNDs05{.Fy"><field name="value">161</field></shadow></value></block></value></block></value><next><block type="variables_set" id=":3ABqF]~wQH7@S$nx|X="><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="christmasring_create" id="z87kWT0XR?me|=KXHBMo"/></value><next><block type="christmasring_changeMode" id="|gN,gE0t+h8nnfRO`G*b"><field name="mode">LEDMode.Rainbow</field><value name="ring"><block type="variables_get" id="LWWE#7XuB[9^sF_=jG)7"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value><next><block type="christmasring_showStrip" id="gao5,jUP3^X}cWH-z2%r"><value name="ring"><block type="variables_get" id="4AH$18x/LS-dxop6MUbP"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value><next><block type="variables_set" id="avD`%4;I|kf#gv}}`rQ/"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field><value name="VALUE"><shadow type="math_number" id="kQ5BXptK(JU!:Mkev87["><field name="NUM">1</field></shadow></value><next><block type="christmasring_setColorPattern" id="Ws_Kja*iD~zg$-C:=G1p"><value name="ring"><block type="variables_get" id=",58#xcBZUH/Q+MV|F^z$"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value><value name="colorList"><block type="variables_get" id="Jg;*S]:|+:dWlyfaEj{L"><field name="VAR" id="/AvssPuBBrM3V%re[L3)">colorList</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="device_button_event" id="/Z/=f/vq)~|zhooGa*Jl" x="1829" y="20"><field name="NAME">Button.A</field><statement name="HANDLER"><block type="variables_set" id="GoqLifD/iBU{NI]%403#"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="`7-3=}Eu9nAw-SO$xzPB"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id=",$lenlPv-KRXO1/jWf[S"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field></block></value><value name="B"><shadow type="math_number" id="3kLE|JHMhqIW!0iZ})_="><field name="NUM">1</field></shadow></value></block></value><next><block type="christmasring_setRingColor" id="eg3U);QXG[0V0[*bt9vh"><value name="ring"><block type="variables_get" id=".o=ArUR|X:`upfpfC5L,"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value><value name="color"><shadow type="neopixel_colors"/><block type="ChristmasWreath_showColorWheel" id="j|k9vj?h,vs#I-P3=?IA"><value name="color"><shadow type="colorWheelPicker" id="n8fhymMVEw^ZWGQYasFj"><field name="value">255</field></shadow></value></block></value><next><block type="christmasring_showStrip" id="kmwsi6`73}(vp?b/`iId"><comment pinned="false" h="80" w="160" relx="10" rely="10">ring2.showColor(neopixel.hsl(0, 0, 0))</comment><value name="ring"><block type="variables_get" id="W=8/4L6SSMX_y].=x7U}"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value></block></next></block></next></block></statement></block><block type="device_button_event" id="LgDEi`8$}%T6[W.J,(CK" x="2535" y="20"><field name="NAME">Button.B</field><statement name="HANDLER"><block type="variables_set" id="@#RP.)2ft{WDj{wBUN^O"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="`Ph5_aUI-lut,/LqoV=Q"><field name="OP">MINUS</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="Hgv$]];i^xb1m:,%`5B+"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field></block></value><value name="B"><shadow type="math_number" id="/s$H7iB=s`=?DMgzjrJu"><field name="NUM">1</field></shadow></value></block></value><next><block type="christmasring_setRingColor" id="A`#xsGZkT]V8wIJ0frf*"><value name="ring"><block type="variables_get" id="3+%+c1^530+g@HK=GAS!"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value><value name="color"><shadow type="neopixel_colors"/><block type="ChristmasWreath_showColorWheel" id="AK4|QuPjPKJM07P6TMR^"><value name="color"><shadow type="colorWheelPicker" id="n!Y);e!2PrgI!OHasd3p"><field name="value">45</field></shadow></value></block></value><next><block type="christmasring_showStrip" id="=OmHD0M$i0/U6kR6=52^"><comment pinned="false" h="80" w="160" relx="10" rely="10">ring2.showColor(neopixel.hsl(0, 0, 0))</comment><value name="ring"><block type="variables_get" id="C/@8uT:Q2g2/C?tSfl$O"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value></block></next></block></next></block></statement></block><block type="device_forever" id="}h(]dcSRMpp/3n!BM;5|" x="3233" y="20"><statement name="HANDLER"><block type="christmasring_rainbowAnimation" id=".bi{hdtK645h.a_My{qt"><value name="ring"><block type="variables_get" id="f]CBjEYlg`DsRH8D~.(D"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value><value name="speed"><block type="variables_get" id="0#Xk=0L*b]Vue+{E.M[k"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field></block></value><next><block type="christmasring_showStrip" id="-Gpj?9E+~3%n!4YpBZw^"><comment pinned="false" h="80" w="160" relx="10" rely="10">ring2.setRingColor(ChristmasWreath.showColorWheel(45))
ring2.showColor(neopixel.hsl(0, 0, 0))</comment><value name="ring"><block type="variables_get" id="e)9,U9chiu?}S.QYVu#Y"><field name="VAR" id="U#DVR-r^h`0Kj`CQ$n}h">ring2</field></block></value></block></next></block></statement></block><block type="variables_set" id="kUs,0/|GJtObawrgbhDc" disabled="true" x="3893" y="20"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="$j[?!*o($jC4xn}yQCFn" disabled="true"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="Y.:QAc9W1z$p-RAi#AqS" disabled="true"><field name="VAR" id="N}{7/VJ.Re]30R~JGI1F">speed</field></block></value><value name="B"><shadow type="math_number" id="X(~Yb{R+?2M!P9MBUM~h" disabled="true"><field name="NUM">1</field></shadow></value></block></value></block><block type="lists_create_with" id="W4V{?^J@?sQu)UV)pDoF" disabled="true" x="584" y="25020"><mutation items="3" horizontalafter="3"/><value name="ADD0"><block type="christmasring_pickColorHue" id="O^.]6jXeq.TRj_9Jw?B(" disabled="true"><value name="color"><shadow type="colorWheelHsvPicker" id="Nsq%q?|D_H-+1hN#3H8i" disabled="true"><field name="value">147</field></shadow></value></block></value><value name="ADD1"><block type="christmasring_pickColorHue" id="r`um;hG.oJ)*jL48E`9:" disabled="true"><value name="color"><shadow type="colorWheelHsvPicker" id="54,EHVn(n*x0bMJ0q;64" disabled="true"><field name="value">193</field></shadow></value></block></value><value name="ADD2"><block type="christmasring_pickColorHue" id="qT9!l[bozE4AyazLEVYR" disabled="true"><value name="color"><shadow type="colorWheelHsvPicker" id="+r~o2Ve%eL8^ZoFxWUKo" disabled="true"><field name="value">170</field></shadow></value></block></value></block></xml>